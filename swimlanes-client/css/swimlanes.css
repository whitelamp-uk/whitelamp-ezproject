

/* Framework diagnostic */
#gui-restricted > p,
#gui-restricted > pre {
    margin: 0;
    width: 0;
    height: 0;
    overflow: hidden;
}


#whitelamp-ezproject-swimlanes-client {
    padding: 0;
    font-family: 'sans-serif';
    font-size: medium;
}

#whitelamp-ezproject-swimlanes-client div,
#whitelamp-ezproject-swimlanes-client form,
#whitelamp-ezproject-swimlanes-client section,
#whitelamp-ezproject-swimlanes-client nav.navigator {
    box-sizing: border-box;
    padding: 0;
}

#whitelamp-ezproject-swimlanes-client .nugget,
#whitelamp-ezproject-swimlanes-client #gui-splash section {
    padding: 1em;
}

#whitelamp-ezproject-swimlanes-client .nugget.login {
    margin: 6em 0 0 1em;
    padding: 2em;
}
#whitelamp-ezproject-swimlanes-client nav.navigator {
    left: 2em;
    top: 1em;
}

#whitelamp-ezproject-swimlanes-client nav.navigator,
#whitelamp-ezproject-swimlanes-client .nugget.login,
#swimpool {
    width: calc(100vw - 4em);
}

#actors-test {
    display: none;
}

#swimlanes-settings form {
    margin: 0.3em 0 1em 2.8em;
    font-size: 0.9em;
}

#swimlanes-settings form  .save {
    float: right;
    margin-right: 2em;
}

#swimlanes-settings table {
    margin-left: 3em;
    width: calc(100vw - 12em);
    font-size: 0.9em;
}
#swimlanes-settings input[readonly] {
    border-style: none;
    background-color: transparent;
    overflow: visible;
    font-style: italic;
}
#swimlanes-settings table caption {
    background-color: rgba(220,220,220,1);
    padding: 0.3em;
    text-align: left;
}
#swimlanes-settings tbody tr:nth-child(2n-1) {
    background-color: rgba(232,232,232,1);
}
#swimlanes-settings tr,
#swimlanes-settings th,
#swimlanes-settings td {
    border-style: none;
    font-weight: normal;
    padding: 0.3em;
}
#swimlanes-settings tr.gone {
    color: darkgoldenrod;
}
#swimlanes-settings thead td {
    font-size: 0.9em;
    cursor: pointer;
}
#swimlanes-settings tbody td {
    font-size: 0.8em;
    cursor: pointer;
}
#swimlanes-settings tbody tr.gone td {
    cursor: default;
}


#swimpool {
    position: static;
    margin: 6em 0 0 2em;
    box-sizing: border-box;
    height: calc(100vh - 7em);
    overflow-x: auto;
    overflow-y: auto;
    padding: 0;
    text-align: center;
}
#swimpool * {
    box-sizing: inherit;
}

#swimpool select,
#swimpool ::placeholder {
    color: grey;
    font-style: italic;
}
#swimpool select.selected,
#swimpool #input-sort {
    color: unset;
    font-style: unset;
}


#toolbar {
    position: absolute;
    left: 16em;
    top: 2em;
    z-index: 40;
}

#swimpool .swim .link,
#swimpool .swim .close,
#toolbar [name],
#toolbar button,
#toolbar .set .open,
#swimlanes-settings menu > *,
#toolbar .settings {
    border-style: solid;
    border-color: grey;
    border-width: 1px;
    border-radius: 0;
}

#swimpool .swim .link,
#toolbar .set .open,
#swimpool .swims .count,
#swimlanes-settings menu > * {
    background-color: cyan;
}
#swimpool .swim .close {
    background-color: pink;
}
#toolbar .set .open,
#swimpool .swim .close,
#swimpool .swim .link,
#toolbar .settings,
#swimlanes-settings menu > * {
    cursor: pointer;
}
#toolbar .set .open {
    margin: 0;
    padding: 0 0.1em 0 0.1em;
}
#toolbar .set .open.search {
    padding: 0 0.3em 0 0.3em;
}
#toolbar .set .open.new {
    padding: 0 0.2em 0 0.2em;
}
#swimpool .swim .close,
#swimpool .swim .link,
#swimlanes-settings menu > * {
    margin: 0 0.6em 0 0;
    padding: 0 0.3em 0 0.3em;
}
#swimpool .arrow {
    font-size: 1.6em;
}
#toolbar select {
    width: 8em;
    background-color: lightyellow;
}
#toolbar input {
    width: 7em;
    background-color: lightyellow;
    line-height: 1.0;
}
#toolbar #input-sort {
    width: 13.2em;
}

#toolbar .set button,
#toolbar .settings {
    padding: 0 0.1em 0.1em 0.1em;
}
#toolbar .settings {
    background-color: var(--color-background-input);
    padding-right: 0.3em;
    padding-left: 0.2em;
}
#toolbar .set button.selected,
#toolbar .settings.selected {
    background-color: gold;
}

#toolbar .set.swimlane {
    position: fixed;
    right: 3em;
}

#swimpool label {
    color: grey;
}
#swimpool label > .swims {
    color: black;
    font-weight: bold;
}
.center {
    text-align: center;
}

#swimpool section.swimlane {
    position: relative;
    display: none;
    margin: 0 0 1em 0;
    min-height: 5em;
    border-style:  solid;
    border-width: 1px;
    overflow-x: auto;
    overflow-y: auto;
    padding: 0;
    white-space: nowrap;
    font-size: 0.8em;
}
#swimpool section.swimlane.selected {
    display: block;
}

#swimpool section.swimlane > label {
    position:  absolute;
    top: calc(50% - 0.5em);
}
#swimpool section.swimlane > label.before {
    left: 0.2em;
}
#swimpool section.swimlane > label.after {
    right: 0.2em;
}

#swimpool section.status {
    position: relative;
    display: none;
    margin: 0 0.1em 0 0.1em;
    border-style:  solid;
    border-width: 1px;
    overflow-x: auto;
    overflow-y: auto;
    padding: 1.2em 0 0 0;
    white-space: normal;
}
#swimpool section.status.selected {
    display: inline-block;
}

#swimpool section.status > label,
#swimpool .swim {
    border-style: solid;
    border-width: 0 0 1px 0;
    border-color: grey;
}
#swimpool section.status > label {
    position: absolute;
    display: inline-block;
    left: 0;
    top: 0;
    width: 100%;
    text-align: center;
    cursor: pointer;
}

#swimlanes-settings {
    display: none;
}
#swimlanes-settings.selected {
    display: block;
}
#swimlanes-settings,
#swimpool .swim {
    text-align: left;
}
#swimlanes-settings,
#swimpool .swim[open] {
    position: fixed;
    overflow-x:  auto;
    overflow-y:  auto;
    border-style: solid;
    border-width: 1px;
    border-color: black;
    background-color: rgba(255,255,255,1);
    padding: 3em;
}
#swimlanes-settings {
    z-index: 50;
    left: 3.1em;
    top: 7.15em;
    width: calc(100vw - 6.2em);
    height: calc(100vh - 9.95em);
}
#swimpool .swim[open] {
    z-index: 40;
    left: 3.9em;
    top: 9em;
    width: calc(100vw - 7.8em);
    height: calc(100vh - 12.5em);
    white-space: pre-wrap;
}
#swimpool .swim summary {
    display: inline-block;
    cursor: pointer;
}
#swimpool .swim[open] summary {
    text-decoration: underline;
}
#swimpool .swim .link {
    cursor: pointer;
}
#swimpool .swim .arrow {
    font-size: 1.6em;
}

.flash {
    animation: flash ease 1.5s;
}
@keyframes flash {
      0%    { background-color: rgba(255,127,127,1); }
     10%    { background-color: rgba(127,255,127,1); }
     20%    { background-color: rgba(255,127,127,1); }
     30%    { background-color: rgba(127,255,127,1); }
     40%    { background-color: rgba(255,127,127,1); }
     60%    { background-color: rgba(127,255,127,1); }
     80%    { background-color: rgba(255,127,127,1); }
    100%    { background-color: unset; }
}

.splits {
    position: fixed;
    left: 8em;
    top: 4.7em;
    width: 0;
    height: 0;
    box-sizing: border-box;
    overflow: hidden;
}
.splits > div {
    box-sizing: inherit;
    border-style: solid;
    border-width: 1px;
    border-color: red;
    height: 4px;
}
.splits > div.y {
    position: relative;
    width: 52px;
    height: auto;
    border-style: none;
}
.splits > div.y > div {
    display: inline-block;
    box-sizing: inherit;
    width: 4px;
    border-width: 1px;
    border-style: solid;
    border-color: blue;
}
.splits .x-1 {
    width: calc((100vw - (16em + (1 * 0.2em))) / 1);
}
.splits .x-2 {
    width: calc((100vw - (16em + (2 * 0.2em))) / 2);
}
.splits .x-3 {
    width: calc((100vw - (16em + (3 * 0.2em))) / 3);
}
.splits .x-4 {
    width: calc((100vw - (16em + (4 * 0.2em))) / 4);
}
.splits .x-5 {
    width: calc((100vw - (16em + (5 * 0.2em))) / 5);
}
.splits .x-6 {
    width: calc((100vw - (16em + (6 * 0.2em))) / 6);
}
.splits .x-7 {
    width: calc((100vw - (16em + (7 * 0.2em))) / 7);
}
.splits .x-8 {
    width: calc((100vw - (16em + (8 * 0.2em))) / 8);
}
.splits .x-9 {
    width: calc((100vw - (16em + (9 * 0.2em))) / 9);
}
.splits .x-10 {
    width: calc((100vw - (16em + (10 * 0.2em))) / 10);
}
.splits .y-1 {
    height: calc((100vh - (9em + (1 * 1em))) / 1);
}
.splits .y-2 {
    height: calc((100vh - (9em + (2 * 1em))) / 2);
}
.splits .y-3 {
    height: calc((100vh - (9em + (3 * 1em))) / 3);
}
.splits .y-4 {
    height: calc((100vh - (9em + (4 * 1em))) / 4);
}
.splits .y-5 {
    height: calc((100vh - (9em + (5 * 1em))) / 5);
}


